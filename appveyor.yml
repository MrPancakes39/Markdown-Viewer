environment:
  nodejs_version: "14.15.4"

image:
  - Ubuntu
  - Visual Studio 2019

branches:
  only:
    - main

install:
  - sh: nvm install --lts
  - sh: PACK_VER=$(python3 -c "import json; x=open(\"package.json\",\"r\").read(); print(json.loads(x)[\"version\"]);")
  - ps: if ($isWindows) { Update-NodeJsInstallation $env:nodejs_version }
  - ps: $env:package_version = (Get-Content -Raw -Path package.json | ConvertFrom-Json).version
  - yarn

test_script:
  - node --version
  - yarn run test
  - sh: echo $PACK_VER
  - ps: if ($isWindows) { echo $env:package_version }

before_build:
  - ps: yarn run gen-tmp
  - cmd: yarn run package-win
  - sh: yarn run package-linux

build_script:
  # Creates Tar Package For Linux.
  - sh: mv release-builds/markdown* release-builds/markdown-viewer
  - sh: cp assets/\!\!\!READ_ME\!\!\!.txt assets/md-view.desktop assets/icon.png release-builds/markdown-viewer
  - sh: cd release-builds && tar czf ./markdown-viewer-linux.tar.gz markdown-viewer
  - sh: cd .. && ls release-builds/

  # Creates Exe Setup with Inno Setup for Windows.
  - cmd: copy assets\setup.iss .
  - cmd: C:\"Program Files (x86)"\"Inno Setup 6"\ISCC.exe .\setup.iss
  - ps: if ($isWindows) { move Output\setup.exe release-builds\markdown-viewer-setup.exe}
  - cmd: rmdir Output
  - ps: if ($isWindows) { Compress-Archive release-builds\markdown-viewer-setup.exe release-builds\markdown-viewer-win32.zip }
  - cmd: dir release-builds

artifacts:
  - path: release-builds\*.zip
    name: md-view-win32

  - path: release-builds\*.tar.gz
    name: md-view-linux

deploy:
  tag: v$(package_version)
  release: Markdown-Viewer-v$(package_version)
  description: "Update $(package_version)"
  provider: GitHub
  auth_token:
    secure: a89z3Lqf4pRPewcATJLFtVsgEfnUxKPi7/B9+NLIKqIKGMNMm60tTQIkETUPRNis
  artifact: md-view-win32, md-view-linux
  draft: false
  prerelease: false
  on:
    branch: main
    APPVEYOR_REPO_TAG: true